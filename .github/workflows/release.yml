name: Build and Release Modernizer

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build and Release Assets
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: Linux
            ext: tar.gz
          - os: macos-latest
            platform: macOS
            ext: zip
          - os: windows-latest
            platform: Windows
            ext: zip

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build executable
        run: |
          pyinstaller --onefile --noconsole --add-data "settings.json:." modernizer.py

      - name: Create release artifact
        run: |
          mkdir -p release
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            mkdir release
            move dist\modernizer.exe release\modernizer.exe
            Compress-Archive -Path release\modernizer.exe -DestinationPath release\modernizer-${{ matrix.platform }}-${{ github.run_id }}.zip
          else
            mv dist/modernizer release/modernizer
            cd release
            zip modernizer-${{ matrix.platform }}-${{ github.run_id }}.${{ matrix.ext }} *
            cd ..
          fi
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: modernizer-${{ matrix.platform }}
          path: release/modernizer-${{ matrix.platform }}-${{ github.run_id }}.${{ matrix.ext }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Release ${{ github.ref_name }}
          tag: ${{ github.ref_name }}
          artifacts: |
            artifacts/*
