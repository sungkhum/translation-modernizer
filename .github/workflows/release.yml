name: Build and Release

on:
  push:
    tags:
      - "v*"  # Trigger on version tags (e.g., v1.0.0)
  workflow_dispatch:  # Allow manual trigger from GitHub Actions UI

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        platform: [intel, arm64]
        include:
          # Ensure ARM64 builds only for macOS
          - os: macos-latest
            platform: arm64
          - os: macos-latest
            platform: intel
          # For other OSes, default to intel
          - os: ubuntu-latest
            platform: intel
          - os: windows-latest
            platform: intel

    steps:
      # Set OS and platform output
      - name: Set OS and platform output
        run: |
          echo "os=${{ matrix.os }}" >> $GITHUB_ENV
          echo "platform=${{ matrix.platform }}" >> $GITHUB_ENV

      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      # Build the executable
      - name: Build with PyInstaller
        run: |
          pyinstaller --onefile --noconsole --add-data "settings.json:." modernizer.py
        env:
          ARCHFLAGS: "-arch ${matrix.platform}"  # macOS-specific flag for architecture

      # Verify the contents of the dist directory
      - name: Verify dist directory
        run: ls -R dist

      # Upload artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: modernizer-${{ matrix.os }}-${{ matrix.platform }}
          path: dist/*
          retention-days: 7

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Download all build artifacts
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      # Verify downloaded artifacts
      - name: Verify downloaded artifacts
        run: ls -R artifacts

      # Compress macOS artifacts
      - name: Compress macOS artifacts
        run: |
          mkdir -p artifacts/compressed
          zip -r artifacts/compressed/modernizer-macos-latest-intel.zip artifacts/modernizer-macos-latest-intel
          zip -r artifacts/compressed/modernizer-macos-latest-arm64.zip artifacts/modernizer-macos-latest-arm64

      # Compress Ubuntu artifacts
      - name: Compress Ubuntu artifacts
        run: |
          mkdir -p artifacts/compressed
          zip -r artifacts/compressed/modernizer-ubuntu-latest-intel.zip artifacts/modernizer-ubuntu-latest-intel
          zip -r artifacts/compressed/modernizer-ubuntu-latest-arm64.zip artifacts/modernizer-ubuntu-latest-arm64

      # Compress Windows artifacts
      - name: Compress Windows artifacts
        run: |
          mkdir -p artifacts/compressed
          zip -r artifacts/compressed/modernizer-windows-latest-intel.zip artifacts/modernizer-windows-latest-intel
          zip -r artifacts/compressed/modernizer-windows-latest-arm64.zip artifacts/modernizer-windows-latest-arm64

      # Debug compression results
      - name: List compressed artifacts
        run: ls -R artifacts/compressed

      # Upload macOS Intel artifact
      - name: Upload macOS Intel Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MYTOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/compressed/modernizer-macos-latest-intel.zip
          asset_name: modernizer-macos-latest-intel.zip
          asset_content_type: application/zip

      # Upload macOS ARM64 artifact
      - name: Upload macOS ARM64 Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MYTOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/compressed/modernizer-macos-latest-arm64.zip
          asset_name: modernizer-macos-latest-arm64.zip
          asset_content_type: application/zip

      # Upload Ubuntu Intel artifact
      - name: Upload Ubuntu Intel Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MYTOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/compressed/modernizer-ubuntu-latest-intel.zip
          asset_name: modernizer-ubuntu-latest-intel.zip
          asset_content_type: application/zip

      # Upload Ubuntu ARM64 artifact
      - name: Upload Ubuntu ARM64 Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MYTOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/compressed/modernizer-ubuntu-latest-arm64.zip
          asset_name: modernizer-ubuntu-latest-arm64.zip
          asset_content_type: application/zip

      # Upload Windows Intel artifact
      - name: Upload Windows Intel Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MYTOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/compressed/modernizer-windows-latest-intel.zip
          asset_name: modernizer-windows-latest-intel.zip
          asset_content_type: application/zip

      # Upload Windows ARM64 artifact
      - name: Upload Windows ARM64 Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MYTOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/compressed/modernizer-windows-latest-arm64.zip
          asset_name: modernizer-windows-latest-arm64.zip
          asset_content_type: application/zip