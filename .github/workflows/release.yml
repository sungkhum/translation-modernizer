name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build executable
        run: |
          pyinstaller --onefile --noconsole --add-data "settings.json:." modernizer.py
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-modernizer
          path: |
            dist/modernizer.exe
            dist/modernizer
          if-no-files-found: ignore

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Windows artifact
        uses: actions/download-artifact@v2
        with:
          name: windows-latest-modernizer
        if: always()

      - name: Download macOS artifact
        uses: actions/download-artifact@v2
        with:
          name: macos-latest-modernizer
        if: always()

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Windows asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/modernizer.exe
          asset_name: modernizer-windows.exe
          asset_content_type: application/octet-stream
        if: always()

      - name: Upload macOS asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/modernizer
          asset_name: modernizer-macos
          asset_content_type: application/octet-stream
        if: always()
