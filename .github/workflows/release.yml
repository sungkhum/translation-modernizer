name: Create a GitHub Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build Binaries for ${{ matrix.os }}-${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        python-version: ['3.10', '3.11']
        exclude:
          - os: windows-latest
            python-version: '3.11'
    steps:

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          pip install nuitka

      - name: Build Executables (Posix)
        if: ${{ startsWith(matrix.os, 'macos') || startsWith(matrix.os, 'ubuntu') }}
        run: |
          python -m nuitka \
            --standalone \
            --onefile \
            --assume-yes-for-downloads \
            --output-dir=build \
            --include-data-file=settings.json=. \
            modernizer.py

      - name: Build Executables (Windows)
        if: ${{ startsWith(matrix.os, 'windows') }}
        run: |
          python -m nuitka \
            --standalone \
            --onefile \
            --assume-yes-for-downloads \
            --output-dir=build \
            --include-data-file=settings.json=. \
            --windows-product-name="Modernizer" \
            modernizer.py

      - name: Archive Built Files
        run: |
          mkdir -p dist/release
          mv build/* dist/release/

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: built-binary
          path: dist/release

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: built-binary
          path: dist/release

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: dist/release/*
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ## Changes
            Release version ${{ github.ref_name }}.
